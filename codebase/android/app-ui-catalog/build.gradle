plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
}

android {
    namespace "com.makeappssimple.abhimanyu.financemanager.android.app.ui.catalog"
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.makeappssimple.abhimanyu.financemanager.android.app.ui.catalog"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            shrinkResources false

            // This should be true for Jacoco but false for compose testing
            // Jacoco
            testCoverageEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"

        freeCompilerArgs += [
                "-opt-in=kotlin.RequiresOptIn",
                "-opt-in=kotlin.contracts.ExperimentalContracts",
                "-opt-in=kotlin.ExperimentalUnsignedTypes",
                "-opt-in=kotlin.time.ExperimentalTime",

                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-opt-in=kotlinx.coroutines.FlowPreview",
                "-opt-in=kotlinx.coroutines.InternalCoroutinesApi",
                "-opt-in=kotlinx.coroutines.ObsoleteCoroutinesApi",

                "-opt-in=androidx.lifecycle.compose.ExperimentalLifecycleComposeApi",

                "-opt-in=androidx.compose.animation.ExperimentalAnimationApi",
                "-opt-in=androidx.compose.animation.core.InternalAnimationApi",
                "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi",
                "-opt-in=androidx.compose.material.ExperimentalMaterialApi",
                "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api",
                "-opt-in=androidx.compose.runtime.ExperimentalComposeApi",
                "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi",

                "-opt-in=com.google.accompanist.navigation.material.ExperimentalMaterialNavigationApi",
                "-opt-in=com.google.accompanist.pager.ExperimentalPagerApi",
                "-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi",
        ]
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion jetpackComposeCompilerVersion
    }

    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

dependencies {
    implementation project(":core-common")
    implementation project(":core-designsystem")
    implementation project(":core-ui")
    implementation project(":chart")

    testImplementation project(":core-testing")

    androidTestImplementation project(":core-testing")

    // Androidx core
    implementation "androidx.core:core-ktx:$rootProject.androidXCoreVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecycleRuntimeVersion"

    // Jetpack compose
    implementation "androidx.compose.ui:ui:$rootProject.jetpackComposeVersion"
    implementation "androidx.compose.ui:ui-util:$rootProject.jetpackComposeVersion"

    // Jetpack compose tooling support (Previews, etc.)
    debugImplementation "androidx.compose.ui:ui-tooling:$rootProject.jetpackComposeVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$rootProject.jetpackComposeVersion"

    // Jetpack compose material icons
    implementation "androidx.compose.material:material-icons-extended:$rootProject.jetpackComposeVersion"

    // Jetpack compose material design
    implementation "androidx.compose.material:material:$rootProject.jetpackComposeVersion"
    implementation "androidx.compose.material3:material3:$rootProject.jetpackComposeMaterial3Version"

    // Jetpack compose material design adapter
    implementation "com.google.android.material:compose-theme-adapter:$rootProject.jetpackComposeMaterialDesignAdapterVersion"

    // Jetpack compose integration with activities
    implementation "androidx.activity:activity-compose:$rootProject.jetpackComposeActivityIntegrationVersion"

    // Jetpack compose integration with view models
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$rootProject.jetpackComposeViewModelIntegrationVersion"

    // Jetpack compose lifecycle runtime
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$rootProject.jetpackComposeLifecycleRuntimeVersion"

    // Accompanist
    implementation "com.google.accompanist:accompanist-insets:$rootProject.accompanistVersion"

    // Accompanist flow layout
    implementation "com.google.accompanist:accompanist-flowlayout:$rootProject.accompanistVersion"

    // Accompanist pager
    implementation "com.google.accompanist:accompanist-pager:$rootProject.accompanistVersion"

    // Accompanist pager indicators
    implementation "com.google.accompanist:accompanist-pager-indicators:$rootProject.accompanistVersion"

    // Testing

    // Jetpack compose UI tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$rootProject.jetpackComposeVersion"

    // Jetpack compose UI tests manifest - Needed for createComposeRule, but not createAndroidComposeRule
    debugImplementation("androidx.compose.ui:ui-test-manifest:$rootProject.jetpackComposeVersion")
}
